:root {
  --bg: #0b0f14;
  --panel: #121822;
  --text: #e6edf3;
  --muted: #9fb0c3;
  --accent: #4da3ff;
  --accent2: #7af0b2;
  --danger: #ff6b6b;
  --warning: #ffa726;
  --success: #66bb6a;
  --border: #1f2a3a;
  --shadow: rgba(0,0,0,0.2);
  --radius: 12px;
  --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  --summary-font-size: 15px;
}

/* Slide-out disclaimer styles */
.note-wrap {
  position: relative;
  margin-top: 12px;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.note-toggle {
  background: transparent;
  border: 1px solid rgba(255,255,255,0.06);
  color: #9fb8d6;
  padding: 8px 14px;
  border-radius: 8px;
  cursor: pointer;
  font-size: 13px;
  display: inline-block;
  margin: 8px auto;
}
.note {
  /* Inline collapsible panel that pushes content instead of overlapping */
  position: static;
  display: block;
  width: 100%;
  max-width: 560px;
  background: rgba(255,255,255,0.02);
  border: 1px solid rgba(255,255,255,0.04);
  color: #d7eaf8;
  padding: 0; /* inner padding handled by .note-inner */
  border-radius: 10px;
  box-shadow: 0 8px 24px rgba(2,6,23,0.06);
  overflow: hidden;
  transition: max-height 200ms ease, opacity 160ms ease, padding 160ms ease;
  max-height: 0;
  opacity: 0;
  pointer-events: none;
}
.note.slide-open {
  max-height: 420px; /* room for content */
  opacity: 1;
  pointer-events: auto;
}
.note-inner { padding: 16px; text-align: center; }
.note-inner p { margin: 8px 0; font-size: 13px; line-height: 1.4; text-align: center; }
.note-inner .muted { color: rgba(255,255,255,0.6); font-size: 12px; text-align: center; }

/* Remove hover reveal to avoid accidental overlap on touch devices; rely on the toggle button */


@media (prefers-color-scheme: light) {
  :root {
    --bg: #f7fafc;
    --panel: #ffffff;
    --text: #0f1720;
    --muted: #5b6878;
    --accent: #2b6cb0;
    --accent2: #0d9488;
    --danger: #c53030;
    --warning: #d69e2e;
    --success: #38a169;
    --border: #e2e8f0;
    --shadow: rgba(0,0,0,0.1);
  }
}

/* Manual theme override: takes precedence over system preference */
[data-theme="dark"] {
  --bg: #0b0f14;
  --panel: #121822;
  --text: #e6edf3;
  --muted: #9fb0c3;
  --accent: #4da3ff;
  --accent2: #7af0b2;
  --danger: #ff6b6b;
  --warning: #ffa726;
  --success: #66bb6a;
  --border: #1f2a3a;
  --shadow: rgba(0,0,0,0.2);
}

[data-theme="light"] {
  --bg: #f7fafc;
  --panel: #ffffff;
  --text: #0f1720;
  --muted: #5b6878;
  --accent: #2b6cb0;
  --accent2: #0d9488;
  --danger: #c53030;
  --warning: #d69e2e;
  --success: #38a169;
  --border: #e2e8f0;
  --shadow: rgba(0,0,0,0.1);
}

/* Performance optimizations */
* { 
  box-sizing: border-box; 
  margin: 0;
  padding: 0;
}

/* Improved font loading */
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  background: radial-gradient(60% 120% at 100% 0, rgba(77,163,255,0.06), transparent), var(--bg);
  color: var(--text);
  line-height: 1.6;
  font-size: 16px;
  transition: var(--transition);
  will-change: background-color, color;
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Focus management */
:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
  border-radius: 4px;
}

/* Theme toggle */
.theme-toggle {
  /* Positioned within the header so it scrolls away with the page instead of being fixed */
  position: absolute;
  top: 20px;
  right: 20px;
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: 8px;
  cursor: pointer;
  z-index: 1000;
  transition: var(--transition);
  font-size: 18px;
}

.theme-toggle:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 12px var(--shadow);
}

header {
  padding: 32px 16px 24px;
  display: flex; 
  align-items: center; 
  justify-content: center; 
  gap: 16px; 
  flex-wrap: wrap;
  position: relative;
}

header h1 { 
  margin: 0; 
  font-size: clamp(1.5rem, 4vw, 2rem); 
  letter-spacing: 0.3px; 
  font-weight: 700;
  background: linear-gradient(135deg, var(--accent), var(--accent2));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

header .tag { 
  font-size: 0.9rem; 
  color: var(--muted); 
  font-weight: 500;
}

main {
  max-width: 1200px; 
  margin: 0 auto; 
  padding: 0 16px 40px;
  display: grid; 
  grid-template-columns: minmax(300px, 350px) 1fr; 
  gap: 24px;
  align-items: start;
}

@media (max-width: 980px) {
  main { 
    grid-template-columns: 1fr; 
    gap: 16px;
  }
}

.panel {
  background: linear-gradient(180deg, rgba(255,255,255,0.03), transparent 80%), var(--panel);
  border: 1px solid var(--border); 
  border-radius: var(--radius); 
  padding: 20px;
  box-shadow: 0 8px 32px var(--shadow);
  backdrop-filter: blur(8px);
  position: relative;
  overflow: visible;
}

.panel::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--accent), transparent);
  opacity: 0.5;
}

/* Form improvements */
.form-group {
  margin-bottom: 16px;
}

/* Balanced slider layout for the main controls */

/* slider-row: use a stacked layout (full-width controls) for balance */
.slider-row {
  display: block;
  width: 100%;
}

.slider-group {
  display: block;
  margin-bottom: 12px;
}

.slider-group > label {
  font-weight: 600;
  color: var(--muted);
  display: block;
  margin-bottom: 6px;
}

/* Align the slider value to the right for visual balance. The markup uses a flex container for the control row. */
.slider-group .muted {
  min-width: 44px;
  text-align: right;
  font-size: 0.95rem;
}

/* Make slider control rows use flex so slider track and value align predictably */
.slider-control-row {
  display: flex;
  gap: 12px;
  align-items: center;
}

.slider-control-row input[type="range"] {
  flex: 1 1 auto; /* slider expands to available space */
}

.slider-control-row .muted {
  flex: 0 0 84px; /* wider fixed width so longer labels (e.g. "very long") fit on one line */
  text-align: right;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

label { 
  font-size: 0.875rem; 
  color: var(--muted); 
  margin-bottom: 6px; 
  display: block; 
  font-weight: 500;
}

/* Prefer emoji-capable fonts on form controls so country flags render in Chromium on Windows */
select, input[type="text"], input[type="number"] {
  width: 100%; 
  padding: 12px 14px; 
  border-radius: 8px; 
  border: 1px solid var(--border);
  background: rgba(255,255,255,0.05); 
  color: var(--text); 
  outline: none;
  transition: var(--transition);
  font-size: 14px;
  /* include common color-emoji fonts as fallbacks so regional indicator flags render */
  font-family: "Segoe UI Emoji", "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Symbol", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
}

/* Improve native dropdown option readability in dark/light themes */
select option, select optgroup {
  background-color: var(--panel);
  color: var(--text);
}

/* Ensure options also prefer emoji-capable fonts in Chromium-based browsers */
select option {
  font-family: "Segoe UI Emoji", "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Symbol", system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif;
}

select option:checked, select option:hover {
  background-color: rgba(77,163,255,0.18);
  color: var(--text);
}

select:focus, input:focus {
  border-color: var(--accent);
  box-shadow: 0 0 0 3px rgba(77,163,255,0.1);
  background: rgba(255,255,255,0.08);
}

select:hover, input:hover {
  border-color: var(--accent);
}

.row { 
  display: grid; 
  grid-template-columns: 1fr 1fr; 
  gap: 12px; 
}

.row-3 { 
  display: grid; 
  grid-template-columns: 1fr 1fr 1fr; 
  gap: 12px; 
}

@media (max-width: 640px) {
  .row, .row-3, .slider-row {
    grid-template-columns: 1fr;
  }
}

.actions { 
  display: flex; 
  gap: 12px; 
  margin-top: 20px; 
  flex-wrap: wrap;
  justify-content: center;
}

/* Ensure the primary action is visually prominent and wider */
.actions > button {
  min-width: 240px;
  max-width: 100%;
}

button.primary {
  min-width: 0; /* allow container to control width */
  width: 100%;
  padding: 14px 20px;
  font-size: 15px;
  box-shadow: 0 10px 30px rgba(77,163,255,0.12);
}

@media (max-width: 640px) {
  .actions > button, button.primary { width: 100%; min-width: 0; }
}

button {
  appearance: none; 
  border: 1px solid var(--border); 
  background: var(--accent);
  color: white; 
  padding: 12px 20px; 
  border-radius: 8px; 
  cursor: pointer; 
  font-weight: 600;
  font-size: 14px;
  box-shadow: 0 4px 12px rgba(77,163,255,0.3); 
  transition: var(--transition);
  position: relative;
  overflow: hidden;
  min-width: 120px;
  text-align: center;
}

button:hover:not(:disabled) { 
  transform: translateY(-2px); 
  box-shadow: 0 6px 20px rgba(77,163,255,0.4);
}

button:active {
  transform: translateY(0);
}

button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

button.secondary { 
  background: transparent; 
  color: var(--text);
  box-shadow: 0 2px 8px var(--shadow);
  min-width: 100px;
  flex: 1;
}

button.secondary:hover:not(:disabled) {
  background: rgba(255,255,255,0.05);
  box-shadow: 0 4px 12px var(--shadow);
}

.btn-group {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
  align-items: center;
}

.muted { 
  color: var(--muted); 
}

.output {
  min-height: 300px;
  position: relative;
}

/* Enhanced loading states */
.loading {
  display: inline-flex; 
  gap: 8px; 
  align-items: center;
  padding: 16px 20px; 
  border-radius: 10px; 
  background: rgba(77,163,255,0.08);
  border: 1px solid rgba(77,163,255,0.2);
  backdrop-filter: blur(8px);
}

.loading .dot {
  width: 8px; 
  height: 8px; 
  border-radius: 50%; 
  background: var(--accent); 
  animation: pulse 1.4s ease-in-out infinite both;
}

.loading .dot:nth-child(1) { animation-delay: -0.32s; }
.loading .dot:nth-child(2) { animation-delay: -0.16s; }
.loading .dot:nth-child(3) { animation-delay: 0s; }

@keyframes pulse { 
  0%, 80%, 100% { 
    opacity: 0.3; 
    transform: scale(0.8); 
  } 
  40% { 
    opacity: 1; 
    transform: scale(1.2); 
  } 
}

/* New loader styles */
.loader {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 14px 16px;
  border-radius: 12px;
  background: linear-gradient(180deg, rgba(77,163,255,0.06), rgba(77,163,255,0.03));
  border: 1px solid rgba(77,163,255,0.18);
  box-shadow: 0 8px 24px var(--shadow);
}

.spinner {
  width: 22px;
  height: 22px;
  border-radius: 50%;
  background: conic-gradient(from 0deg, var(--accent) 0deg, transparent 240deg);
  -webkit-mask: radial-gradient(circle 8px, transparent 6px, #000 7px);
  mask: radial-gradient(circle 8px, transparent 6px, #000 7px);
  animation: spin 1s linear infinite;
  flex: 0 0 auto;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.loader .message {
  display: grid;
  gap: 6px;
}

.loader .subtle {
  color: var(--muted);
  font-size: 0.85rem;
}

.progress {
  position: relative;
  width: 200px;
  max-width: 48vw;
  height: 3px;
  border-radius: 999px;
  overflow: hidden;
  background: var(--border);
}

.progress::before {
  content: '';
  position: absolute;
  top: 0; left: -40%;
  width: 40%; height: 100%;
  background: linear-gradient(90deg, transparent, var(--accent), transparent);
  animation: progressShift 1.2s ease-in-out infinite;
}

@keyframes progressShift {
  0% { left: -40%; }
  50% { left: 20%; }
  100% { left: 100%; }
}

/* Button inline spinner */
.btn-spinner {
  width: 1em;
  height: 1em;
  margin-right: 8px;
  vertical-align: -2px;
  display: inline-block;
  border-radius: 50%;
  background: conic-gradient(from 0deg, rgba(255,255,255,0.9), rgba(255,255,255,0) 60%);
  -webkit-mask: radial-gradient(circle 6px, transparent 5px, #000 6px);
  mask: radial-gradient(circle 6px, transparent 5px, #000 6px);
  animation: spin 0.9s linear infinite;
}

/* Skeleton loading */
.skeleton {
  background: linear-gradient(90deg, var(--border) 25%, rgba(255,255,255,0.1) 50%, var(--border) 75%);
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
  border-radius: 4px;
}

@keyframes loading {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

.meta { 
  font-size: 0.875rem; 
  color: var(--muted); 
  display: flex; 
  gap: 16px; 
  flex-wrap: wrap; 
  margin-bottom: 16px;
  padding: 12px 0;
  border-bottom: 1px solid var(--border);
}

.meta-item {
  display: flex;
  align-items: center;
  gap: 4px;
}

/* Prefer emoji-capable fonts for inline meta/labels so regional-flag emoji render on Chromium/Windows */
.meta, .meta-item, label, header h1 {
  font-family: "Segoe UI Emoji", "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Symbol", system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif;
}

/* Twemoji output: SVG images inserted into DOM via innerHTML */
.twemoji {
  display: inline-block;
  vertical-align: -2px;
}
.twemoji img {
  width: 1em;
  height: 1em;
  display: inline-block;
}

/* Layout helper: keep native select but allow a small flag/icon next to it if needed */
.select-with-flag {
  display: flex;
  align-items: center;
}
.select-with-flag select {
  flex: 1 1 auto;
}

/* Custom select/listbox styles */
.custom-select {
  position: relative;
  width: 100%;
}
.custom-select-button {
  width: 100%;
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 10px 12px;
  border-radius: 8px;
  background: rgba(255,255,255,0.03);
  border: 1px solid var(--border);
  color: var(--text);
  cursor: pointer;
  /* remove the general button glow (overrides generic button rules) */
  box-shadow: none;
}
.custom-select-button:focus {
  outline: none !important;
  box-shadow: none !important;
}

/* Prevent the global :focus-visible rule from painting an outline on the select button */
.custom-select-button:focus-visible {
  outline: none !important;
  box-shadow: none !important;
}

/* Force-disable any remaining glow/shadow/filters for the custom selects used for
   Region and Language. Use high specificity and !important to override global rules
   (e.g. generic `button` rules or :focus-visible). */
.custom-select, .custom-select-button, .custom-select-list, .custom-select-option {
  outline: none !important;
  box-shadow: none !important;
  filter: none !important;
}

.custom-select:focus, .custom-select:focus-visible,
.custom-select-button:focus, .custom-select-button:focus-visible,
.custom-select-button:hover, .custom-select-button:active,
.custom-select-list:focus, .custom-select-list:focus-visible {
  outline: none !important;
  box-shadow: none !important;
  filter: none !important;
}

/* Remove hover/interactive visual reactions for custom select buttons used for
   Region and Language. Prevent movement, shadow, and transitions on hover/active. */
.custom-select-button,
.custom-select-button:not(:disabled) {
  /* allow a subtle transition for border/background but keep other effects disabled */
  transition: border-color 0.12s ease, background 0.12s ease !important;
}
.custom-select-button:hover,
.custom-select-button:focus,
.custom-select-button:focus-visible,
.custom-select-button:active {
  transform: none !important;
  box-shadow: none !important;
  outline: none !important;
  /* subtle background shift and colored border on hover like native selects */
  background: rgba(255,255,255,0.04) !important;
  border-color: var(--accent) !important;
  cursor: pointer;
}

/* Also make sure hover/active states do not introduce a glow */
.custom-select-button:hover,
.custom-select-button:active {
  box-shadow: none !important;
}
.custom-select-label { flex: 1; text-align: left; }
.custom-select-caret { opacity: 0.8; }
.custom-select-list {
  position: absolute;
  left: 0; right: 0;
  margin-top: 6px;
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 8px;
  box-shadow: 0 8px 30px var(--shadow);
  max-height: 260px;
  overflow: auto;
  z-index: 80;
}

/* Prevent the global focus-visible glow from wrapping the custom select root
   so the region/language menus don't get the accent outline/glow. */
.custom-select:focus-visible {
  outline: none;
  outline-offset: 0;
}
.custom-select-option {
  display: flex;
  gap: 8px;
  align-items: center;
  padding: 10px 12px;
  cursor: pointer;
}
.custom-select-option.highlight, .custom-select-option[aria-selected="true"] {
  background: rgba(77,163,255,0.08);
}
.custom-select-option .twemoji img { width: 1.2em; height: 1.2em; }

.error { 
  color: var(--danger);
  background: rgba(255,107,107,0.1);
  padding: 12px 16px;
  border-radius: 8px;
  border: 1px solid rgba(255,107,107,0.2);
}

.success {
  color: var(--success);
  background: rgba(102,187,106,0.1);
  padding: 12px 16px;
  border-radius: 8px;
  border: 1px solid rgba(102,187,106,0.2);
}

.warning {
  color: var(--warning);
  background: rgba(255,167,38,0.1);
  padding: 12px 16px;
  border-radius: 8px;
  border: 1px solid rgba(255,167,38,0.2);
}

.summary {
  line-height: 1.7;
  font-size: var(--summary-font-size);
  overflow-wrap: anywhere;
  word-break: break-word;
}

/* compact reading mode removed; density controlled via font size slider */

.summary h1, .summary h2, .summary h3 { 
  margin: 1.5em 0 0.75em; 
  line-height: 1.3;
}

.summary h1 { font-size: 1.5em; }
.summary h2 { font-size: 1.25em; }
.summary h3 { font-size: 1.1em; }

.summary p {
  margin: 1em 0;
}

.summary ul, .summary ol {
  margin: 1em 0;
  padding-left: 1.5em;
}

.summary li {
  margin: 0.5em 0;
}

.summary a { 
  color: var(--accent2); 
  text-decoration: none; 
  border-bottom: 1px solid transparent;
  transition: var(--transition);
  max-width: 100%;
  display: inline-block;
  vertical-align: bottom;
  overflow-wrap: anywhere;
}

.summary a:hover { 
  border-bottom-color: var(--accent2);
}

.summary blockquote {
  border-left: 3px solid var(--accent);
  padding-left: 1em;
  margin: 1em 0;
  font-style: italic;
  opacity: 0.9;
}

footer { 
  text-align: center; 
  color: var(--muted); 
  padding: 32px 0; 
  font-size: 0.875rem; 
  border-top: 1px solid var(--border);
  margin-top: 40px;
}

.note { 
  font-size: 0.8rem; 
  color: var(--muted); 
  margin-top: 12px; 
  padding: 8px 12px;
  background: rgba(255,255,255,0.02);
  border-radius: 6px;
  border: 1px solid rgba(255,255,255,0.05);
}

/* Utility classes */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.fade-in {
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Subtle reveal animation for summary content */
.reveal-up { 
  opacity: 0; 
  transform: translateY(6px);
  animation: revealUp 420ms cubic-bezier(0.22, 1, 0.36, 1) forwards; 
}

@keyframes revealUp { 
  to { opacity: 1; transform: translateY(0); } 
}

/* Improved responsiveness */
@media (max-width: 480px) {
  header {
    padding: 24px 16px 20px;
  }
  
  .panel {
    padding: 16px;
  }
  
  button {
    padding: 10px 16px;
    min-width: 100px;
  }
  
  .actions {
    flex-direction: column;
  }
  
  .theme-toggle {
    top: 16px;
    right: 16px;
  }
}

/* Print styles */
@media print {
  .theme-toggle,
  .panel:first-child,
  .actions,
  footer {
    display: none;
  }
}

/* Print-specific link styles */
@media print {
  .summary a {
    color: black;
    text-decoration: underline;
  }
}

/* Modal styles */
.modal-backdrop {
  position: fixed;
  inset: 0;
  background: rgba(0,0,0,0.5);
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 2000;
}

.modal-backdrop[aria-hidden="false"] { 
  display: flex; 
}

.modal {
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 12px;
  padding: 20px;
  width: min(680px, 92vw);
  box-shadow: 0 20px 60px var(--shadow);
  color: var(--text);
}

.modal header {
  padding: 0 0 12px 0;
  justify-content: space-between;
  align-items: center;
}

.modal h2 { 
  font-size: 1.25rem; 
}

.modal .close-btn { 
  background: transparent; 
  min-width: auto; 
  padding: 6px 10px; 
}

.modal .content { 
  color: var(--text); 
}

.modal .content p { 
  margin: 0.6em 0; 
}

/* Range (slider) styling */
input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  height: 6px;
  background: linear-gradient(90deg, var(--accent), var(--accent2));
  border-radius: 999px;
  outline: none;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: var(--panel);
  border: 2px solid var(--accent2);
  box-shadow: 0 4px 10px var(--shadow);
  cursor: pointer;
}

input[type="range"]:focus {
  box-shadow: 0 0 0 4px rgba(77,163,255,0.12);
}

input[type="range"]::-moz-range-thumb {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: var(--panel);
  border: 2px solid var(--accent2);
  box-shadow: 0 4px 10px var(--shadow);
}

/* Custom scrollbar for summary panels and modals */
.summary {
  scrollbar-width: thin; /* Firefox */
  scrollbar-color: rgba(77,163,255,0.22) rgba(255,255,255,0.02); /* thumb, track */
}

/* Webkit-based browsers */
.summary::-webkit-scrollbar {
  width: 10px;
}
.summary::-webkit-scrollbar-track {
  background: transparent;
}
.summary::-webkit-scrollbar-thumb {
  background: linear-gradient(180deg, rgba(77,163,255,0.14), rgba(77,163,255,0.22));
  border-radius: 999px;
  border: 2px solid transparent;
  background-clip: padding-box;
}
.summary::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(180deg, rgba(77,163,255,0.20), rgba(77,163,255,0.30));
}
